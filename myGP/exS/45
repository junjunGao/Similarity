	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-33(%rbp), %rdx
	leaq	-34(%rbp), %rcx
	leaq	-35(%rbp), %r8
	leaq	-36(%rbp), %r9
	movl	$0, -4(%rbp)
	movl	$0, -12(%rbp)
	movl	$0, -16(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	$100, %r10d
	movsbl	-33(%rbp), %r11d
	subl	$48, %r11d
	movl	%r11d, -20(%rbp)
	movsbl	-34(%rbp), %r11d
	subl	$48, %r11d
	movl	%r11d, -24(%rbp)
	movsbl	-35(%rbp), %r11d
	subl	$48, %r11d
	movl	%r11d, -28(%rbp)
	movsbl	-36(%rbp), %r11d
	subl	$48, %r11d
	movl	%r11d, -32(%rbp)
	movl	-8(%rbp), %r11d
	movl	%eax, -40(%rbp)         ## 4-byte Spill
	movl	%r11d, %eax
	cltd
	idivl	%r10d
	cmpl	$0, %edx
	je	LBB0_2
## BB#1:
	movl	$4, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -44(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-44(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	je	LBB0_3
LBB0_2:
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -48(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-48(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %eax
	jne	LBB0_4
LBB0_3:
	movl	$1, -16(%rbp)
LBB0_4:
	cmpl	$0, -20(%rbp)
	jne	LBB0_7
## BB#5:
	cmpl	$1, -24(%rbp)
	jne	LBB0_7
## BB#6:
	imull	$10, -28(%rbp), %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_81
LBB0_7:
	cmpl	$0, -20(%rbp)
	jne	LBB0_10
## BB#8:
	cmpl	$2, -24(%rbp)
	jne	LBB0_10
## BB#9:
	imull	$10, -28(%rbp), %eax
	addl	$31, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_80
LBB0_10:
	cmpl	$0, -20(%rbp)
	jne	LBB0_16
## BB#11:
	cmpl	$3, -24(%rbp)
	jne	LBB0_16
## BB#12:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_13
	jmp	LBB0_14
LBB0_13:
	imull	$10, -28(%rbp), %eax
	addl	$59, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_15
LBB0_14:
	imull	$10, -28(%rbp), %eax
	addl	$60, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_15:
	jmp	LBB0_79
LBB0_16:
	cmpl	$0, -20(%rbp)
	jne	LBB0_22
## BB#17:
	cmpl	$4, -24(%rbp)
	jne	LBB0_22
## BB#18:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_19
	jmp	LBB0_20
LBB0_19:
	imull	$10, -28(%rbp), %eax
	addl	$90, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_21
LBB0_20:
	imull	$10, -28(%rbp), %eax
	addl	$91, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_21:
	jmp	LBB0_78
LBB0_22:
	cmpl	$0, -20(%rbp)
	jne	LBB0_28
## BB#23:
	cmpl	$5, -24(%rbp)
	jne	LBB0_28
## BB#24:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_25
	jmp	LBB0_26
LBB0_25:
	imull	$10, -28(%rbp), %eax
	addl	$120, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_27
LBB0_26:
	imull	$10, -28(%rbp), %eax
	addl	$121, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_27:
	jmp	LBB0_77
LBB0_28:
	cmpl	$0, -20(%rbp)
	jne	LBB0_34
## BB#29:
	cmpl	$6, -24(%rbp)
	jne	LBB0_34
## BB#30:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_31
	jmp	LBB0_32
LBB0_31:
	imull	$10, -28(%rbp), %eax
	addl	$151, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_33
LBB0_32:
	imull	$10, -28(%rbp), %eax
	addl	$152, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_33:
	jmp	LBB0_76
LBB0_34:
	cmpl	$0, -20(%rbp)
	jne	LBB0_40
## BB#35:
	cmpl	$7, -24(%rbp)
	jne	LBB0_40
## BB#36:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_37
	jmp	LBB0_38
LBB0_37:
	imull	$10, -28(%rbp), %eax
	addl	$181, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_39
LBB0_38:
	imull	$10, -28(%rbp), %eax
	addl	$182, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_39:
	jmp	LBB0_75
LBB0_40:
	cmpl	$0, -20(%rbp)
	jne	LBB0_46
## BB#41:
	cmpl	$8, -24(%rbp)
	jne	LBB0_46
## BB#42:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_43
	jmp	LBB0_44
LBB0_43:
	imull	$10, -28(%rbp), %eax
	addl	$212, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_45
LBB0_44:
	imull	$10, -28(%rbp), %eax
	addl	$213, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_45:
	jmp	LBB0_74
LBB0_46:
	cmpl	$0, -20(%rbp)
	jne	LBB0_52
## BB#47:
	cmpl	$9, -24(%rbp)
	jne	LBB0_52
## BB#48:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_49
	jmp	LBB0_50
LBB0_49:
	imull	$10, -28(%rbp), %eax
	addl	$243, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_51
LBB0_50:
	imull	$10, -28(%rbp), %eax
	addl	$244, %eax
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_51:
	jmp	LBB0_73
LBB0_52:
	cmpl	$1, -20(%rbp)
	jne	LBB0_58
## BB#53:
	cmpl	$0, -24(%rbp)
	jne	LBB0_58
## BB#54:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_55
	jmp	LBB0_56
LBB0_55:
	imull	$10, -28(%rbp), %eax
	addl	$273, %eax              ## imm = 0x111
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_57
LBB0_56:
	imull	$10, -28(%rbp), %eax
	addl	$274, %eax              ## imm = 0x112
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_57:
	jmp	LBB0_72
LBB0_58:
	cmpl	$1, -20(%rbp)
	jne	LBB0_64
## BB#59:
	cmpl	$1, -24(%rbp)
	jne	LBB0_64
## BB#60:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_61
	jmp	LBB0_62
LBB0_61:
	imull	$10, -28(%rbp), %eax
	addl	$304, %eax              ## imm = 0x130
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_63
LBB0_62:
	imull	$10, -28(%rbp), %eax
	addl	$305, %eax              ## imm = 0x131
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_63:
	jmp	LBB0_71
LBB0_64:
	cmpl	$1, -20(%rbp)
	jne	LBB0_70
## BB#65:
	cmpl	$2, -24(%rbp)
	jne	LBB0_70
## BB#66:
	movb	$0, %al
	movl	$0, -16(%rbp)
	testb	$1, %al
	jne	LBB0_67
	jmp	LBB0_68
LBB0_67:
	imull	$10, -28(%rbp), %eax
	addl	$334, %eax              ## imm = 0x14E
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_69
LBB0_68:
	imull	$10, -28(%rbp), %eax
	addl	$335, %eax              ## imm = 0x14F
	addl	-32(%rbp), %eax
	movl	%eax, -12(%rbp)
LBB0_69:
	jmp	LBB0_70
LBB0_70:
	jmp	LBB0_71
LBB0_71:
	jmp	LBB0_72
LBB0_72:
	jmp	LBB0_73
LBB0_73:
	jmp	LBB0_74
LBB0_74:
	jmp	LBB0_75
LBB0_75:
	jmp	LBB0_76
LBB0_76:
	jmp	LBB0_77
LBB0_77:
	jmp	LBB0_78
LBB0_78:
	jmp	LBB0_79
LBB0_79:
	jmp	LBB0_80
LBB0_80:
	jmp	LBB0_81
LBB0_81:
	leaq	L_.str1(%rip), %rdi
	movl	-12(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	-4(%rbp), %esi
	movl	%eax, -52(%rbp)         ## 4-byte Spill
	movl	%esi, %eax
	addq	$64, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %c%c %c%c"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
