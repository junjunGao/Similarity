	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movb	$0, %al
	callq	_scanf
	cmpl	$1, -12(%rbp)
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	jne	LBB0_2
## BB#1:
	movl	-16(%rbp), %eax
	movl	%eax, -20(%rbp)
LBB0_2:
	cmpl	$2, -12(%rbp)
	jne	LBB0_4
## BB#3:
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
LBB0_4:
	cmpl	$3, -12(%rbp)
	jne	LBB0_6
## BB#5:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	movl	%eax, -20(%rbp)
LBB0_6:
	cmpl	$4, -12(%rbp)
	jne	LBB0_8
## BB#7:
	movl	-16(%rbp), %eax
	addl	$90, %eax
	movl	%eax, -20(%rbp)
LBB0_8:
	cmpl	$5, -12(%rbp)
	jne	LBB0_10
## BB#9:
	movl	-16(%rbp), %eax
	addl	$120, %eax
	movl	%eax, -20(%rbp)
LBB0_10:
	cmpl	$6, -12(%rbp)
	jne	LBB0_12
## BB#11:
	movl	-16(%rbp), %eax
	addl	$151, %eax
	movl	%eax, -20(%rbp)
LBB0_12:
	cmpl	$7, -12(%rbp)
	jne	LBB0_14
## BB#13:
	movl	-16(%rbp), %eax
	addl	$181, %eax
	movl	%eax, -20(%rbp)
LBB0_14:
	cmpl	$8, -12(%rbp)
	jne	LBB0_16
## BB#15:
	movl	-16(%rbp), %eax
	addl	$212, %eax
	movl	%eax, -20(%rbp)
LBB0_16:
	cmpl	$9, -12(%rbp)
	jne	LBB0_18
## BB#17:
	movl	-16(%rbp), %eax
	addl	$243, %eax
	movl	%eax, -20(%rbp)
LBB0_18:
	cmpl	$10, -12(%rbp)
	jne	LBB0_20
## BB#19:
	movl	-16(%rbp), %eax
	addl	$273, %eax              ## imm = 0x111
	movl	%eax, -20(%rbp)
LBB0_20:
	cmpl	$11, -12(%rbp)
	jne	LBB0_22
## BB#21:
	movl	-16(%rbp), %eax
	addl	$304, %eax              ## imm = 0x130
	movl	%eax, -20(%rbp)
LBB0_22:
	cmpl	$12, -12(%rbp)
	jne	LBB0_24
## BB#23:
	movl	-16(%rbp), %eax
	addl	$334, %eax              ## imm = 0x14E
	movl	%eax, -20(%rbp)
LBB0_24:
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-28(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_27
## BB#25:
	cmpl	$3, -12(%rbp)
	jl	LBB0_27
## BB#26:
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
LBB0_27:
	leaq	L_.str1(%rip), %rdi
	movl	-20(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	$0, %esi
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%esi, %eax
	addq	$32, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
