	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	$4, %r8d
	movl	-8(%rbp), %r9d
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movl	%r9d, %eax
	cltd
	idivl	%r8d
	cmpl	$0, %edx
	jne	LBB0_2
## BB#1:
	movl	$100, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-28(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	je	LBB0_3
LBB0_2:
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-32(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_37
LBB0_3:
	cmpl	$1, -12(%rbp)
	je	LBB0_5
## BB#4:
	cmpl	$2, -12(%rbp)
	jne	LBB0_6
LBB0_5:
	movl	-12(%rbp), %eax
	subl	$1, %eax
	imull	$31, %eax, %eax
	addl	-16(%rbp), %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_36
LBB0_6:
	cmpl	$3, -12(%rbp)
	jne	LBB0_8
## BB#7:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_35
LBB0_8:
	cmpl	$4, -12(%rbp)
	jne	LBB0_10
## BB#9:
	movl	-16(%rbp), %eax
	addl	$91, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_34
LBB0_10:
	cmpl	$5, -12(%rbp)
	jne	LBB0_12
## BB#11:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_33
LBB0_12:
	cmpl	$6, -12(%rbp)
	jne	LBB0_14
## BB#13:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_32
LBB0_14:
	cmpl	$7, -12(%rbp)
	jne	LBB0_16
## BB#15:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_31
LBB0_16:
	cmpl	$8, -12(%rbp)
	jne	LBB0_18
## BB#17:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_30
LBB0_18:
	cmpl	$9, -12(%rbp)
	jne	LBB0_20
## BB#19:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_29
LBB0_20:
	cmpl	$10, -12(%rbp)
	jne	LBB0_22
## BB#21:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_28
LBB0_22:
	cmpl	$11, -12(%rbp)
	jne	LBB0_24
## BB#23:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_27
LBB0_24:
	cmpl	$12, -12(%rbp)
	jne	LBB0_26
## BB#25:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
LBB0_26:
	jmp	LBB0_27
LBB0_27:
	jmp	LBB0_28
LBB0_28:
	jmp	LBB0_29
LBB0_29:
	jmp	LBB0_30
LBB0_30:
	jmp	LBB0_31
LBB0_31:
	jmp	LBB0_32
LBB0_32:
	jmp	LBB0_33
LBB0_33:
	jmp	LBB0_34
LBB0_34:
	jmp	LBB0_35
LBB0_35:
	jmp	LBB0_36
LBB0_36:
	jmp	LBB0_71
LBB0_37:
	cmpl	$1, -12(%rbp)
	je	LBB0_39
## BB#38:
	cmpl	$2, -12(%rbp)
	jne	LBB0_40
LBB0_39:
	movl	-12(%rbp), %eax
	subl	$1, %eax
	imull	$31, %eax, %eax
	addl	-16(%rbp), %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_70
LBB0_40:
	cmpl	$3, -12(%rbp)
	jne	LBB0_42
## BB#41:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_69
LBB0_42:
	cmpl	$4, -12(%rbp)
	jne	LBB0_44
## BB#43:
	movl	-16(%rbp), %eax
	addl	$90, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_68
LBB0_44:
	cmpl	$5, -12(%rbp)
	jne	LBB0_46
## BB#45:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_67
LBB0_46:
	cmpl	$6, -12(%rbp)
	jne	LBB0_48
## BB#47:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_66
LBB0_48:
	cmpl	$7, -12(%rbp)
	jne	LBB0_50
## BB#49:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_65
LBB0_50:
	cmpl	$8, -12(%rbp)
	jne	LBB0_52
## BB#51:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_64
LBB0_52:
	cmpl	$9, -12(%rbp)
	jne	LBB0_54
## BB#53:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_63
LBB0_54:
	cmpl	$10, -12(%rbp)
	jne	LBB0_56
## BB#55:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_62
LBB0_56:
	cmpl	$11, -12(%rbp)
	jne	LBB0_58
## BB#57:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_61
LBB0_58:
	cmpl	$12, -12(%rbp)
	jne	LBB0_60
## BB#59:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, -20(%rbp)
LBB0_60:
	jmp	LBB0_61
LBB0_61:
	jmp	LBB0_62
LBB0_62:
	jmp	LBB0_63
LBB0_63:
	jmp	LBB0_64
LBB0_64:
	jmp	LBB0_65
LBB0_65:
	jmp	LBB0_66
LBB0_66:
	jmp	LBB0_67
LBB0_67:
	jmp	LBB0_68
LBB0_68:
	jmp	LBB0_69
LBB0_69:
	jmp	LBB0_70
LBB0_70:
	jmp	LBB0_71
LBB0_71:
	leaq	L_.str1(%rip), %rdi
	movl	-20(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	-4(%rbp), %esi
	movl	%eax, -36(%rbp)         ## 4-byte Spill
	movl	%esi, %eax
	addq	$48, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
