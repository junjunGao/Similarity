	.section	__TEXT,__text,regular,pure_instructions
	.globl	_run
	.align	4, 0x90
_run:                                   ## @run
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	movl	$4, %eax
	movl	%edi, -8(%rbp)
	movl	-8(%rbp), %edi
	movl	%eax, -12(%rbp)         ## 4-byte Spill
	movl	%edi, %eax
	cltd
	movl	-12(%rbp), %edi         ## 4-byte Reload
	idivl	%edi
	cmpl	$0, %eax
	jne	LBB0_4
## BB#1:
	movl	$100, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -16(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-16(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %eax
	je	LBB0_4
## BB#2:
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-20(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %eax
	jne	LBB0_4
## BB#3:
	movl	$1, -4(%rbp)
	jmp	LBB0_5
LBB0_4:
	movl	$0, -4(%rbp)
LBB0_5:
	movl	-4(%rbp), %eax
	popq	%rbp
	ret
	.cfi_endproc

	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp7:
	.cfi_def_cfa_offset 16
Ltmp8:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp9:
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	-8(%rbp), %edi
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	callq	_run
	cmpl	$1, %eax
	jne	LBB1_37
## BB#1:
	cmpl	$1, -12(%rbp)
	jne	LBB1_3
## BB#2:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	jmp	LBB1_36
LBB1_3:
	cmpl	$2, -12(%rbp)
	jne	LBB1_5
## BB#4:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	jmp	LBB1_35
LBB1_5:
	cmpl	$3, -12(%rbp)
	jne	LBB1_7
## BB#6:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	jmp	LBB1_34
LBB1_7:
	cmpl	$4, -12(%rbp)
	jne	LBB1_9
## BB#8:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -36(%rbp)         ## 4-byte Spill
	jmp	LBB1_33
LBB1_9:
	cmpl	$5, -12(%rbp)
	jne	LBB1_11
## BB#10:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -40(%rbp)         ## 4-byte Spill
	jmp	LBB1_32
LBB1_11:
	cmpl	$6, -12(%rbp)
	jne	LBB1_13
## BB#12:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -44(%rbp)         ## 4-byte Spill
	jmp	LBB1_31
LBB1_13:
	cmpl	$7, -12(%rbp)
	jne	LBB1_15
## BB#14:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -48(%rbp)         ## 4-byte Spill
	jmp	LBB1_30
LBB1_15:
	cmpl	$8, -12(%rbp)
	jne	LBB1_17
## BB#16:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -52(%rbp)         ## 4-byte Spill
	jmp	LBB1_29
LBB1_17:
	cmpl	$9, -12(%rbp)
	jne	LBB1_19
## BB#18:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -56(%rbp)         ## 4-byte Spill
	jmp	LBB1_28
LBB1_19:
	cmpl	$10, -12(%rbp)
	jne	LBB1_21
## BB#20:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -60(%rbp)         ## 4-byte Spill
	jmp	LBB1_27
LBB1_21:
	cmpl	$11, -12(%rbp)
	jne	LBB1_23
## BB#22:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -64(%rbp)         ## 4-byte Spill
	jmp	LBB1_26
LBB1_23:
	cmpl	$12, -12(%rbp)
	jne	LBB1_25
## BB#24:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$28, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -68(%rbp)         ## 4-byte Spill
LBB1_25:
	jmp	LBB1_26
LBB1_26:
	jmp	LBB1_27
LBB1_27:
	jmp	LBB1_28
LBB1_28:
	jmp	LBB1_29
LBB1_29:
	jmp	LBB1_30
LBB1_30:
	jmp	LBB1_31
LBB1_31:
	jmp	LBB1_32
LBB1_32:
	jmp	LBB1_33
LBB1_33:
	jmp	LBB1_34
LBB1_34:
	jmp	LBB1_35
LBB1_35:
	jmp	LBB1_36
LBB1_36:
	jmp	LBB1_73
LBB1_37:
	cmpl	$1, -12(%rbp)
	jne	LBB1_39
## BB#38:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -72(%rbp)         ## 4-byte Spill
	jmp	LBB1_72
LBB1_39:
	cmpl	$2, -12(%rbp)
	jne	LBB1_41
## BB#40:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -76(%rbp)         ## 4-byte Spill
	jmp	LBB1_71
LBB1_41:
	cmpl	$3, -12(%rbp)
	jne	LBB1_43
## BB#42:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -80(%rbp)         ## 4-byte Spill
	jmp	LBB1_70
LBB1_43:
	cmpl	$4, -12(%rbp)
	jne	LBB1_45
## BB#44:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -84(%rbp)         ## 4-byte Spill
	jmp	LBB1_69
LBB1_45:
	cmpl	$5, -12(%rbp)
	jne	LBB1_47
## BB#46:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -88(%rbp)         ## 4-byte Spill
	jmp	LBB1_68
LBB1_47:
	cmpl	$6, -12(%rbp)
	jne	LBB1_49
## BB#48:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -92(%rbp)         ## 4-byte Spill
	jmp	LBB1_67
LBB1_49:
	cmpl	$7, -12(%rbp)
	jne	LBB1_51
## BB#50:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -96(%rbp)         ## 4-byte Spill
	jmp	LBB1_66
LBB1_51:
	cmpl	$8, -12(%rbp)
	jne	LBB1_53
## BB#52:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -100(%rbp)        ## 4-byte Spill
	jmp	LBB1_65
LBB1_53:
	cmpl	$9, -12(%rbp)
	jne	LBB1_55
## BB#54:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -104(%rbp)        ## 4-byte Spill
	jmp	LBB1_64
LBB1_55:
	cmpl	$10, -12(%rbp)
	jne	LBB1_57
## BB#56:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -108(%rbp)        ## 4-byte Spill
	jmp	LBB1_63
LBB1_57:
	cmpl	$11, -12(%rbp)
	jne	LBB1_59
## BB#58:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -112(%rbp)        ## 4-byte Spill
	jmp	LBB1_62
LBB1_59:
	cmpl	$12, -12(%rbp)
	jne	LBB1_61
## BB#60:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	addl	$29, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$31, %eax
	addl	$30, %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -116(%rbp)        ## 4-byte Spill
LBB1_61:
	jmp	LBB1_62
LBB1_62:
	jmp	LBB1_63
LBB1_63:
	jmp	LBB1_64
LBB1_64:
	jmp	LBB1_65
LBB1_65:
	jmp	LBB1_66
LBB1_66:
	jmp	LBB1_67
LBB1_67:
	jmp	LBB1_68
LBB1_68:
	jmp	LBB1_69
LBB1_69:
	jmp	LBB1_70
LBB1_70:
	jmp	LBB1_71
LBB1_71:
	jmp	LBB1_72
LBB1_72:
	jmp	LBB1_73
LBB1_73:
	movl	$0, %eax
	addq	$128, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
