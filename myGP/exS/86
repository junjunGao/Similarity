	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movl	$0, -24(%rbp)
	movb	$0, %al
	callq	_scanf
	cmpl	$1, -12(%rbp)
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	jne	LBB0_6
## BB#1:
	movl	$1, -20(%rbp)
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_5
## BB#3:                                ##   in Loop: Header=BB0_2 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#4:                                ##   in Loop: Header=BB0_2 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_2
LBB0_5:
	jmp	LBB0_6
LBB0_6:
	cmpl	$2, -12(%rbp)
	jne	LBB0_12
## BB#7:
	movl	$31, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_8:                                 ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_11
## BB#9:                                ##   in Loop: Header=BB0_8 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#10:                               ##   in Loop: Header=BB0_8 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_8
LBB0_11:
	jmp	LBB0_12
LBB0_12:
	movl	$0, %eax
	movl	$4, %ecx
	movl	-8(%rbp), %edx
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movl	-32(%rbp), %eax         ## 4-byte Reload
	cmpl	%edx, %eax
	jne	LBB0_14
## BB#13:
	movl	$0, %eax
	movl	$100, %ecx
	movl	-8(%rbp), %edx
	movl	%eax, -36(%rbp)         ## 4-byte Spill
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movl	-36(%rbp), %eax         ## 4-byte Reload
	cmpl	%edx, %eax
	jne	LBB0_15
LBB0_14:
	movl	$0, %eax
	movl	$400, %ecx              ## imm = 0x190
	movl	-8(%rbp), %edx
	movl	%eax, -40(%rbp)         ## 4-byte Spill
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movl	-40(%rbp), %eax         ## 4-byte Reload
	cmpl	%edx, %eax
	jne	LBB0_41
LBB0_15:
	cmpl	$3, -12(%rbp)
	jne	LBB0_21
## BB#16:
	movl	$60, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_17:                                ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_20
## BB#18:                               ##   in Loop: Header=BB0_17 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#19:                               ##   in Loop: Header=BB0_17 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_17
LBB0_20:
	jmp	LBB0_21
LBB0_21:
	cmpl	$4, -12(%rbp)
	je	LBB0_26
## BB#22:
	cmpl	$6, -12(%rbp)
	je	LBB0_26
## BB#23:
	cmpl	$8, -12(%rbp)
	je	LBB0_26
## BB#24:
	cmpl	$10, -12(%rbp)
	je	LBB0_26
## BB#25:
	cmpl	$12, -12(%rbp)
	jne	LBB0_31
LBB0_26:
	movl	$2, %eax
	movl	-12(%rbp), %ecx
	subl	$4, %ecx
	imull	$61, %ecx, %ecx
	movl	%eax, -44(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-44(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	addl	$91, %eax
	movl	%eax, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_27:                                ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_30
## BB#28:                               ##   in Loop: Header=BB0_27 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#29:                               ##   in Loop: Header=BB0_27 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_27
LBB0_30:
	jmp	LBB0_31
LBB0_31:
	cmpl	$5, -12(%rbp)
	je	LBB0_35
## BB#32:
	cmpl	$7, -12(%rbp)
	je	LBB0_35
## BB#33:
	cmpl	$9, -12(%rbp)
	je	LBB0_35
## BB#34:
	cmpl	$11, -12(%rbp)
	jne	LBB0_40
LBB0_35:
	movl	$2, %eax
	movl	-12(%rbp), %ecx
	subl	$5, %ecx
	imull	$61, %ecx, %ecx
	movl	%eax, -48(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-48(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	addl	$121, %eax
	movl	%eax, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_36:                                ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_39
## BB#37:                               ##   in Loop: Header=BB0_36 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#38:                               ##   in Loop: Header=BB0_36 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_36
LBB0_39:
	jmp	LBB0_40
LBB0_40:
	jmp	LBB0_67
LBB0_41:
	cmpl	$3, -12(%rbp)
	jne	LBB0_47
## BB#42:
	movl	$59, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_43:                                ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_46
## BB#44:                               ##   in Loop: Header=BB0_43 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#45:                               ##   in Loop: Header=BB0_43 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_43
LBB0_46:
	jmp	LBB0_47
LBB0_47:
	cmpl	$4, -12(%rbp)
	je	LBB0_52
## BB#48:
	cmpl	$6, -12(%rbp)
	je	LBB0_52
## BB#49:
	cmpl	$8, -12(%rbp)
	je	LBB0_52
## BB#50:
	cmpl	$10, -12(%rbp)
	je	LBB0_52
## BB#51:
	cmpl	$12, -12(%rbp)
	jne	LBB0_57
LBB0_52:
	movl	$2, %eax
	movl	-12(%rbp), %ecx
	subl	$4, %ecx
	imull	$61, %ecx, %ecx
	movl	%eax, -52(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-52(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	addl	$90, %eax
	movl	%eax, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_53:                                ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_56
## BB#54:                               ##   in Loop: Header=BB0_53 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#55:                               ##   in Loop: Header=BB0_53 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_53
LBB0_56:
	jmp	LBB0_57
LBB0_57:
	cmpl	$5, -12(%rbp)
	je	LBB0_61
## BB#58:
	cmpl	$7, -12(%rbp)
	je	LBB0_61
## BB#59:
	cmpl	$9, -12(%rbp)
	je	LBB0_61
## BB#60:
	cmpl	$11, -12(%rbp)
	jne	LBB0_66
LBB0_61:
	movl	$2, %eax
	movl	-12(%rbp), %ecx
	subl	$5, %ecx
	imull	$61, %ecx, %ecx
	movl	%eax, -56(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-56(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	addl	$120, %eax
	movl	%eax, -24(%rbp)
	movl	$1, -20(%rbp)
LBB0_62:                                ## =>This Inner Loop Header: Depth=1
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB0_65
## BB#63:                               ##   in Loop: Header=BB0_62 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
## BB#64:                               ##   in Loop: Header=BB0_62 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_62
LBB0_65:
	jmp	LBB0_66
LBB0_66:
	jmp	LBB0_67
LBB0_67:
	leaq	L_.str1(%rip), %rdi
	movl	-24(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	$0, %esi
	movl	%eax, -60(%rbp)         ## 4-byte Spill
	movl	%esi, %eax
	addq	$64, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
