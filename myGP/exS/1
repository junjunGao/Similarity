	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movl	$0, -20(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	-8(%rbp), %edi
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	callq	_isLeapYear
	cmpl	$0, %eax
	je	LBB0_2
## BB#1:
	movl	$29, _daysOfMonth+4(%rip)
LBB0_2:
	movl	$0, -24(%rbp)
LBB0_3:                                 ## =>This Inner Loop Header: Depth=1
	movl	-24(%rbp), %eax
	movl	-12(%rbp), %ecx
	subl	$1, %ecx
	cmpl	%ecx, %eax
	jge	LBB0_6
## BB#4:                                ##   in Loop: Header=BB0_3 Depth=1
	leaq	_daysOfMonth(%rip), %rax
	movslq	-24(%rbp), %rcx
	movl	(%rax,%rcx,4), %edx
	movl	-20(%rbp), %esi
	addl	%edx, %esi
	movl	%esi, -20(%rbp)
## BB#5:                                ##   in Loop: Header=BB0_3 Depth=1
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
	jmp	LBB0_3
LBB0_6:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	movl	-20(%rbp), %ecx
	addl	%eax, %ecx
	movl	%ecx, -20(%rbp)
	movl	-20(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	$0, %ecx
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	addq	$32, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.globl	_isLeapYear
	.align	4, 0x90
_isLeapYear:                            ## @isLeapYear
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp7:
	.cfi_def_cfa_offset 16
Ltmp8:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp9:
	.cfi_def_cfa_register %rbp
	movl	$100, %eax
	movl	%edi, -4(%rbp)
	movl	$0, -8(%rbp)
	movl	-4(%rbp), %edi
	movl	%eax, -12(%rbp)         ## 4-byte Spill
	movl	%edi, %eax
	cltd
	movl	-12(%rbp), %edi         ## 4-byte Reload
	idivl	%edi
	cmpl	$0, %edx
	jne	LBB1_3
## BB#1:
	movl	$400, %eax              ## imm = 0x190
	movl	-4(%rbp), %ecx
	movl	%eax, -16(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-16(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB1_3
## BB#2:
	movl	$1, -8(%rbp)
	jmp	LBB1_7
LBB1_3:
	movl	$100, %eax
	movl	-4(%rbp), %ecx
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-20(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	je	LBB1_6
## BB#4:
	movl	$4, %eax
	movl	-4(%rbp), %ecx
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-24(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB1_6
## BB#5:
	movl	$1, -8(%rbp)
LBB1_6:
	jmp	LBB1_7
LBB1_7:
	movl	-8(%rbp), %eax
	popq	%rbp
	ret
	.cfi_endproc

	.section	__DATA,__data
	.globl	_daysOfMonth            ## @daysOfMonth
	.align	4
_daysOfMonth:
	.long	31                      ## 0x1f
	.long	28                      ## 0x1c
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
