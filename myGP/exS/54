	.section	__TEXT,__text,regular,pure_instructions
	.globl	_mday
	.align	4, 0x90
_mday:                                  ## @mday
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	movl	%edi, -8(%rbp)
	movl	%esi, -12(%rbp)
	cmpl	$2, -8(%rbp)
	jne	LBB0_6
## BB#1:
	movl	$4, %eax
	movl	-12(%rbp), %ecx
	movl	%eax, -16(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-16(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_3
## BB#2:
	movl	$100, %eax
	movl	-12(%rbp), %ecx
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-20(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_4
LBB0_3:
	movl	$400, %eax              ## imm = 0x190
	movl	-12(%rbp), %ecx
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-24(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_5
LBB0_4:
	movl	$29, -4(%rbp)
	jmp	LBB0_12
LBB0_5:
	movl	$28, -4(%rbp)
	jmp	LBB0_12
LBB0_6:
	cmpl	$4, -8(%rbp)
	je	LBB0_10
## BB#7:
	cmpl	$6, -8(%rbp)
	je	LBB0_10
## BB#8:
	cmpl	$9, -8(%rbp)
	je	LBB0_10
## BB#9:
	cmpl	$11, -8(%rbp)
	jne	LBB0_11
LBB0_10:
	movl	$30, -4(%rbp)
	jmp	LBB0_12
LBB0_11:
	movl	$31, -4(%rbp)
LBB0_12:
	movl	-4(%rbp), %eax
	popq	%rbp
	ret
	.cfi_endproc

	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp7:
	.cfi_def_cfa_offset 16
Ltmp8:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp9:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movl	$0, -20(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	%eax, -24(%rbp)         ## 4-byte Spill
LBB1_1:                                 ## =>This Inner Loop Header: Depth=1
	cmpl	$1, -12(%rbp)
	jle	LBB1_3
## BB#2:                                ##   in Loop: Header=BB1_1 Depth=1
	movl	-12(%rbp), %eax
	addl	$4294967295, %eax       ## imm = 0xFFFFFFFF
	movl	%eax, -12(%rbp)
	movl	-12(%rbp), %edi
	movl	-8(%rbp), %esi
	callq	_mday
	movl	-20(%rbp), %esi
	addl	%eax, %esi
	movl	%esi, -20(%rbp)
	jmp	LBB1_1
LBB1_3:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	movl	-20(%rbp), %ecx
	addl	%eax, %ecx
	movl	%ecx, -20(%rbp)
	movl	-20(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	$0, %ecx
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	addq	$32, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d\n"


.subsections_via_symbols
