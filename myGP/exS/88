	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movl	$0, -8(%rbp)
	movl	$0, -12(%rbp)
	movl	$0, -16(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	%eax, -20(%rbp)         ## 4-byte Spill
LBB0_1:                                 ## =>This Inner Loop Header: Depth=1
	movl	-12(%rbp), %eax
	addl	$4294967295, %eax       ## imm = 0xFFFFFFFF
	movl	%eax, -12(%rbp)
	cmpl	$0, %eax
	je	LBB0_20
## BB#2:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$1, -12(%rbp)
	je	LBB0_9
## BB#3:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$3, -12(%rbp)
	je	LBB0_9
## BB#4:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$5, -12(%rbp)
	je	LBB0_9
## BB#5:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$7, -12(%rbp)
	je	LBB0_9
## BB#6:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$8, -12(%rbp)
	je	LBB0_9
## BB#7:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$10, -12(%rbp)
	je	LBB0_9
## BB#8:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$12, -12(%rbp)
	jne	LBB0_10
LBB0_9:                                 ##   in Loop: Header=BB0_1 Depth=1
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, -16(%rbp)
	jmp	LBB0_19
LBB0_10:                                ##   in Loop: Header=BB0_1 Depth=1
	cmpl	$2, -12(%rbp)
	jne	LBB0_17
## BB#11:                               ##   in Loop: Header=BB0_1 Depth=1
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-24(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	je	LBB0_14
## BB#12:                               ##   in Loop: Header=BB0_1 Depth=1
	movl	$4, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-28(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_15
## BB#13:                               ##   in Loop: Header=BB0_1 Depth=1
	movl	$100, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-32(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	je	LBB0_15
LBB0_14:                                ##   in Loop: Header=BB0_1 Depth=1
	movl	-16(%rbp), %eax
	addl	$29, %eax
	movl	%eax, -16(%rbp)
	jmp	LBB0_16
LBB0_15:                                ##   in Loop: Header=BB0_1 Depth=1
	movl	-16(%rbp), %eax
	addl	$28, %eax
	movl	%eax, -16(%rbp)
LBB0_16:                                ##   in Loop: Header=BB0_1 Depth=1
	jmp	LBB0_18
LBB0_17:                                ##   in Loop: Header=BB0_1 Depth=1
	movl	-16(%rbp), %eax
	addl	$30, %eax
	movl	%eax, -16(%rbp)
LBB0_18:                                ##   in Loop: Header=BB0_1 Depth=1
	jmp	LBB0_19
LBB0_19:                                ##   in Loop: Header=BB0_1 Depth=1
	jmp	LBB0_1
LBB0_20:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	$0, %esi
	movl	%eax, -36(%rbp)         ## 4-byte Spill
	movl	%esi, %eax
	addq	$48, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d%d%d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
