	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-80(%rbp), %rsi
	leaq	-88(%rbp), %rdx
	leaq	-64(%rbp), %rax
	leaq	L_main.a(%rip), %rcx
	movabsq	$48, %r8
	movq	___stack_chk_guard@GOTPCREL(%rip), %r9
	movq	(%r9), %r9
	movq	%r9, -8(%rbp)
	movl	$0, -12(%rbp)
	movq	%rax, %r9
	movq	%rdi, -96(%rbp)         ## 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, -104(%rbp)        ## 8-byte Spill
	movq	%rcx, %rsi
	movq	%rdx, -112(%rbp)        ## 8-byte Spill
	movq	%r8, %rdx
	movq	%rax, -120(%rbp)        ## 8-byte Spill
	callq	_memcpy
	movl	$0, -76(%rbp)
	movl	$0, -84(%rbp)
	movq	-120(%rbp), %rax        ## 8-byte Reload
	movq	%rax, -72(%rbp)
	movq	-96(%rbp), %rdi         ## 8-byte Reload
	movq	-104(%rbp), %rsi        ## 8-byte Reload
	movq	-112(%rbp), %rdx        ## 8-byte Reload
	movb	$0, %al
	callq	_scanf
	movl	$0, -84(%rbp)
	movl	%eax, -124(%rbp)        ## 4-byte Spill
LBB0_1:                                 ## =>This Inner Loop Header: Depth=1
	movl	-84(%rbp), %eax
	movl	-80(%rbp), %ecx
	subl	$1, %ecx
	cmpl	%ecx, %eax
	jge	LBB0_4
## BB#2:                                ##   in Loop: Header=BB0_1 Depth=1
	movq	-72(%rbp), %rax
	movq	%rax, %rcx
	addq	$4, %rcx
	movq	%rcx, -72(%rbp)
	movl	(%rax), %edx
	movl	-76(%rbp), %esi
	addl	%edx, %esi
	movl	%esi, -76(%rbp)
## BB#3:                                ##   in Loop: Header=BB0_1 Depth=1
	movl	-84(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -84(%rbp)
	jmp	LBB0_1
LBB0_4:
	leaq	L_.str1(%rip), %rdi
	movl	-88(%rbp), %eax
	movl	-76(%rbp), %ecx
	addl	%eax, %ecx
	movl	%ecx, -76(%rbp)
	movl	-76(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movq	___stack_chk_guard@GOTPCREL(%rip), %rdi
	movq	(%rdi), %rdi
	cmpq	-8(%rbp), %rdi
	movl	%eax, -128(%rbp)        ## 4-byte Spill
	jne	LBB0_6
## BB#5:                                ## %SP_return
	movl	$0, %eax
	addq	$128, %rsp
	popq	%rbp
	ret
LBB0_6:                                 ## %CallStackCheckFailBlk
	callq	___stack_chk_fail
	.cfi_endproc

	.section	__TEXT,__const
	.align	4                       ## @main.a
L_main.a:
	.long	31                      ## 0x1f
	.long	29                      ## 0x1d
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f
	.long	30                      ## 0x1e
	.long	31                      ## 0x1f

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
