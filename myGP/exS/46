	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-92(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	leaq	-100(%rbp), %rcx
	movq	___stack_chk_guard@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	movl	$0, -12(%rbp)
	movl	$0, -16(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	$400, %r8d              ## imm = 0x190
	movl	$31, -32(%rbp)
	movl	$31, -40(%rbp)
	movl	$31, -48(%rbp)
	movl	$31, -52(%rbp)
	movl	$31, -60(%rbp)
	movl	$31, -68(%rbp)
	movl	$31, -76(%rbp)
	movl	$30, -36(%rbp)
	movl	$30, -44(%rbp)
	movl	$30, -56(%rbp)
	movl	$30, -64(%rbp)
	movl	-92(%rbp), %r9d
	movl	%eax, -104(%rbp)        ## 4-byte Spill
	movl	%r9d, %eax
	cltd
	idivl	%r8d
	cmpl	$0, %edx
	je	LBB0_3
## BB#1:
	movl	$4, %eax
	movl	-92(%rbp), %ecx
	movl	%eax, -108(%rbp)        ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-108(%rbp), %ecx        ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_4
## BB#2:
	movl	$100, %eax
	movl	-92(%rbp), %ecx
	movl	%eax, -112(%rbp)        ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-112(%rbp), %ecx        ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	je	LBB0_4
LBB0_3:
	movl	$29, -72(%rbp)
	jmp	LBB0_5
LBB0_4:
	movl	$28, -72(%rbp)
LBB0_5:
	movl	-100(%rbp), %eax
	movl	%eax, -16(%rbp)
	movl	$1, -88(%rbp)
LBB0_6:                                 ## =>This Inner Loop Header: Depth=1
	movl	-88(%rbp), %eax
	cmpl	-96(%rbp), %eax
	jge	LBB0_9
## BB#7:                                ##   in Loop: Header=BB0_6 Depth=1
	movl	-16(%rbp), %eax
	movslq	-88(%rbp), %rcx
	addl	-80(%rbp,%rcx,4), %eax
	movl	%eax, -16(%rbp)
## BB#8:                                ##   in Loop: Header=BB0_6 Depth=1
	movl	-88(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -88(%rbp)
	jmp	LBB0_6
LBB0_9:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movq	___stack_chk_guard@GOTPCREL(%rip), %rdi
	movq	(%rdi), %rdi
	cmpq	-8(%rbp), %rdi
	movl	%eax, -116(%rbp)        ## 4-byte Spill
	jne	LBB0_11
## BB#10:                               ## %SP_return
	movl	$0, %eax
	addq	$128, %rsp
	popq	%rbp
	ret
LBB0_11:                                ## %CallStackCheckFailBlk
	callq	___stack_chk_fail
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
