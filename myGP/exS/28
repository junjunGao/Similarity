	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	$4, %r8d
	movl	-8(%rbp), %r9d
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movl	%r9d, %eax
	cltd
	idivl	%r8d
	cmpl	$0, %edx
	jne	LBB0_2
## BB#1:
	movl	$100, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-28(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_3
LBB0_2:
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-32(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_28
LBB0_3:
	cmpl	$1, -12(%rbp)
	jne	LBB0_5
## BB#4:
	movl	-16(%rbp), %eax
	movl	%eax, -20(%rbp)
LBB0_5:
	cmpl	$2, -12(%rbp)
	jne	LBB0_7
## BB#6:
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
LBB0_7:
	cmpl	$3, -12(%rbp)
	jne	LBB0_9
## BB#8:
	movl	-16(%rbp), %eax
	addl	$60, %eax
	movl	%eax, -20(%rbp)
LBB0_9:
	cmpl	$4, -12(%rbp)
	jne	LBB0_11
## BB#10:
	movl	-16(%rbp), %eax
	addl	$91, %eax
	movl	%eax, -20(%rbp)
LBB0_11:
	cmpl	$5, -12(%rbp)
	jne	LBB0_13
## BB#12:
	movl	-16(%rbp), %eax
	addl	$121, %eax
	movl	%eax, -20(%rbp)
LBB0_13:
	cmpl	$6, -12(%rbp)
	jne	LBB0_15
## BB#14:
	movl	-16(%rbp), %eax
	addl	$152, %eax
	movl	%eax, -20(%rbp)
LBB0_15:
	cmpl	$7, -12(%rbp)
	jne	LBB0_17
## BB#16:
	movl	-16(%rbp), %eax
	addl	$182, %eax
	movl	%eax, -20(%rbp)
LBB0_17:
	cmpl	$8, -12(%rbp)
	jne	LBB0_19
## BB#18:
	movl	-16(%rbp), %eax
	addl	$213, %eax
	movl	%eax, -20(%rbp)
LBB0_19:
	cmpl	$9, -12(%rbp)
	jne	LBB0_21
## BB#20:
	movl	-16(%rbp), %eax
	addl	$213, %eax
	movl	%eax, -20(%rbp)
LBB0_21:
	cmpl	$10, -12(%rbp)
	jne	LBB0_23
## BB#22:
	movl	-16(%rbp), %eax
	addl	$212, %eax
	movl	%eax, -20(%rbp)
LBB0_23:
	cmpl	$11, -12(%rbp)
	jne	LBB0_25
## BB#24:
	movl	-16(%rbp), %eax
	addl	$213, %eax
	movl	%eax, -20(%rbp)
LBB0_25:
	cmpl	$12, -12(%rbp)
	jne	LBB0_27
## BB#26:
	movl	-16(%rbp), %eax
	addl	$243, %eax
	movl	%eax, -20(%rbp)
LBB0_27:
	leaq	L_.str1(%rip), %rdi
	movl	-20(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -36(%rbp)         ## 4-byte Spill
	jmp	LBB0_53
LBB0_28:
	cmpl	$1, -12(%rbp)
	jne	LBB0_52
## BB#29:
	movl	-16(%rbp), %eax
	movl	%eax, -20(%rbp)
	cmpl	$2, -12(%rbp)
	jne	LBB0_31
## BB#30:
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, -20(%rbp)
LBB0_31:
	cmpl	$3, -12(%rbp)
	jne	LBB0_33
## BB#32:
	movl	-16(%rbp), %eax
	addl	$59, %eax
	movl	%eax, -20(%rbp)
LBB0_33:
	cmpl	$4, -12(%rbp)
	jne	LBB0_35
## BB#34:
	movl	-16(%rbp), %eax
	addl	$90, %eax
	movl	%eax, -20(%rbp)
LBB0_35:
	cmpl	$5, -12(%rbp)
	jne	LBB0_37
## BB#36:
	movl	-16(%rbp), %eax
	addl	$120, %eax
	movl	%eax, -20(%rbp)
LBB0_37:
	cmpl	$6, -12(%rbp)
	jne	LBB0_39
## BB#38:
	movl	-16(%rbp), %eax
	addl	$151, %eax
	movl	%eax, -20(%rbp)
LBB0_39:
	cmpl	$7, -12(%rbp)
	jne	LBB0_41
## BB#40:
	movl	-16(%rbp), %eax
	addl	$181, %eax
	movl	%eax, -20(%rbp)
LBB0_41:
	cmpl	$8, -12(%rbp)
	jne	LBB0_43
## BB#42:
	movl	-16(%rbp), %eax
	addl	$212, %eax
	movl	%eax, -20(%rbp)
LBB0_43:
	cmpl	$9, -12(%rbp)
	jne	LBB0_45
## BB#44:
	movl	-16(%rbp), %eax
	addl	$212, %eax
	movl	%eax, -20(%rbp)
LBB0_45:
	cmpl	$10, -12(%rbp)
	jne	LBB0_47
## BB#46:
	movl	-16(%rbp), %eax
	addl	$211, %eax
	movl	%eax, -20(%rbp)
LBB0_47:
	cmpl	$11, -12(%rbp)
	jne	LBB0_49
## BB#48:
	movl	-16(%rbp), %eax
	addl	$212, %eax
	movl	%eax, -20(%rbp)
LBB0_49:
	cmpl	$12, -12(%rbp)
	jne	LBB0_51
## BB#50:
	movl	-16(%rbp), %eax
	addl	$242, %eax
	movl	%eax, -20(%rbp)
LBB0_51:
	leaq	L_.str1(%rip), %rdi
	movl	-20(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -40(%rbp)         ## 4-byte Spill
LBB0_52:
	jmp	LBB0_53
LBB0_53:
	movl	$0, %eax
	addq	$48, %rsp
	popq	%rbp
	ret
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
