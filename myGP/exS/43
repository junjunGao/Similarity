	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp3:
	.cfi_def_cfa_offset 16
Ltmp4:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp5:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	subq	$232, %rsp
Ltmp6:
	.cfi_offset %rbx, -40
Ltmp7:
	.cfi_offset %r14, -32
Ltmp8:
	.cfi_offset %r15, -24
	leaq	L_.str(%rip), %rdi
	leaq	-164(%rbp), %rsi
	leaq	-168(%rbp), %rdx
	leaq	-172(%rbp), %rcx
	leaq	L_main.b(%rip), %rax
	movabsq	$56, %r8
	leaq	-160(%rbp), %r9
	leaq	L_main.a(%rip), %r10
	leaq	-96(%rbp), %r11
	movq	___stack_chk_guard@GOTPCREL(%rip), %rbx
	movq	(%rbx), %rbx
	movq	%rbx, -32(%rbp)
	movl	$0, -36(%rbp)
	movq	%rdi, -184(%rbp)        ## 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, -192(%rbp)        ## 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, -200(%rbp)        ## 8-byte Spill
	movq	%r8, %rdx
	movq	%r9, -208(%rbp)         ## 8-byte Spill
	movq	%r8, -216(%rbp)         ## 8-byte Spill
	movq	%rax, -224(%rbp)        ## 8-byte Spill
	movq	%rcx, -232(%rbp)        ## 8-byte Spill
	callq	_memcpy
	movq	-208(%rbp), %rax        ## 8-byte Reload
	movq	%rax, %rdi
	movq	-224(%rbp), %rsi        ## 8-byte Reload
	movq	-216(%rbp), %rdx        ## 8-byte Reload
	callq	_memcpy
	movq	-184(%rbp), %rdi        ## 8-byte Reload
	movq	-192(%rbp), %rsi        ## 8-byte Reload
	movq	-200(%rbp), %rdx        ## 8-byte Reload
	movq	-232(%rbp), %rcx        ## 8-byte Reload
	movb	$0, %al
	callq	_scanf
	movl	$4, %r14d
	movl	-164(%rbp), %r15d
	movl	%eax, -236(%rbp)        ## 4-byte Spill
	movl	%r15d, %eax
	cltd
	idivl	%r14d
	cmpl	$0, %edx
	jne	LBB0_2
## BB#1:
	movl	$100, %eax
	movl	-164(%rbp), %ecx
	movl	%eax, -240(%rbp)        ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-240(%rbp), %ecx        ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_3
LBB0_2:
	movl	$400, %eax              ## imm = 0x190
	movl	-164(%rbp), %ecx
	movl	%eax, -244(%rbp)        ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-244(%rbp), %ecx        ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_4
LBB0_3:
	movl	-172(%rbp), %eax
	movslq	-168(%rbp), %rcx
	addl	-160(%rbp,%rcx,4), %eax
	movl	%eax, -176(%rbp)
	jmp	LBB0_5
LBB0_4:
	movl	-172(%rbp), %eax
	movslq	-168(%rbp), %rcx
	addl	-96(%rbp,%rcx,4), %eax
	movl	%eax, -176(%rbp)
LBB0_5:
	leaq	L_.str1(%rip), %rdi
	movl	-176(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movq	___stack_chk_guard@GOTPCREL(%rip), %rdi
	movq	(%rdi), %rdi
	cmpq	-32(%rbp), %rdi
	movl	%eax, -248(%rbp)        ## 4-byte Spill
	jne	LBB0_7
## BB#6:                                ## %SP_return
	movl	$0, %eax
	addq	$232, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
LBB0_7:                                 ## %CallStackCheckFailBlk
	callq	___stack_chk_fail
	.cfi_endproc

	.section	__TEXT,__const
	.align	4                       ## @main.a
L_main.a:
	.long	0                       ## 0x0
	.long	0                       ## 0x0
	.long	31                      ## 0x1f
	.long	59                      ## 0x3b
	.long	90                      ## 0x5a
	.long	120                     ## 0x78
	.long	151                     ## 0x97
	.long	181                     ## 0xb5
	.long	212                     ## 0xd4
	.long	243                     ## 0xf3
	.long	273                     ## 0x111
	.long	304                     ## 0x130
	.long	334                     ## 0x14e
	.long	365                     ## 0x16d

	.align	4                       ## @main.b
L_main.b:
	.long	0                       ## 0x0
	.long	0                       ## 0x0
	.long	31                      ## 0x1f
	.long	60                      ## 0x3c
	.long	91                      ## 0x5b
	.long	121                     ## 0x79
	.long	152                     ## 0x98
	.long	182                     ## 0xb6
	.long	213                     ## 0xd5
	.long	244                     ## 0xf4
	.long	274                     ## 0x112
	.long	305                     ## 0x131
	.long	335                     ## 0x14f
	.long	366                     ## 0x16e

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d"


.subsections_via_symbols
