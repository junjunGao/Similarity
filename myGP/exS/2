	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-8(%rbp), %rsi
	leaq	-12(%rbp), %rdx
	leaq	-16(%rbp), %rcx
	movl	$0, -4(%rbp)
	movb	$0, %al
	callq	_scanf
	movl	$4, %r8d
	movl	-8(%rbp), %r9d
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	movl	%r9d, %eax
	cltd
	idivl	%r8d
	cmpl	$0, %edx
	jne	LBB0_2
## BB#1:
	movl	$100, %eax
	movl	-8(%rbp), %ecx
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-28(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_3
LBB0_2:
	movl	$400, %eax              ## imm = 0x190
	movl	-8(%rbp), %ecx
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-32(%rbp), %ecx         ## 4-byte Reload
	idivl	%ecx
	cmpl	$0, %edx
	jne	LBB0_4
LBB0_3:
	movl	$60, -20(%rbp)
	jmp	LBB0_5
LBB0_4:
	movl	$59, -20(%rbp)
LBB0_5:
	movl	-12(%rbp), %eax
	decl	%eax
	movl	%eax, %ecx
	subl	$11, %eax
	movq	%rcx, -40(%rbp)         ## 8-byte Spill
	movl	%eax, -44(%rbp)         ## 4-byte Spill
	ja	LBB0_18
## BB#19:
	leaq	LJTI0_0(%rip), %rax
	movq	-40(%rbp), %rcx         ## 8-byte Reload
	movslq	(%rax,%rcx,4), %rdx
	addq	%rax, %rdx
	jmpq	*%rdx
LBB0_6:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -48(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_7:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -52(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_8:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -56(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_9:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$31, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -60(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_10:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$31, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -64(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_11:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$62, %eax
	addl	$30, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -68(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_12:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$62, %eax
	addl	$60, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -72(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_13:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$93, %eax
	addl	$60, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -76(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_14:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$124, %eax
	addl	$60, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -80(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_15:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$124, %eax
	addl	$90, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -84(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_16:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$155, %eax
	addl	$90, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -88(%rbp)         ## 4-byte Spill
	jmp	LBB0_18
LBB0_17:
	leaq	L_.str1(%rip), %rdi
	movl	-16(%rbp), %eax
	addl	-20(%rbp), %eax
	addl	$155, %eax
	addl	$90, %eax
	movl	%eax, %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -92(%rbp)         ## 4-byte Spill
LBB0_18:
	movl	-4(%rbp), %eax
	addq	$96, %rsp
	popq	%rbp
	ret
	.cfi_endproc
	.align	2, 0x90
L0_0_set_6 = LBB0_6-LJTI0_0
L0_0_set_7 = LBB0_7-LJTI0_0
L0_0_set_8 = LBB0_8-LJTI0_0
L0_0_set_9 = LBB0_9-LJTI0_0
L0_0_set_10 = LBB0_10-LJTI0_0
L0_0_set_11 = LBB0_11-LJTI0_0
L0_0_set_12 = LBB0_12-LJTI0_0
L0_0_set_13 = LBB0_13-LJTI0_0
L0_0_set_14 = LBB0_14-LJTI0_0
L0_0_set_15 = LBB0_15-LJTI0_0
L0_0_set_16 = LBB0_16-LJTI0_0
L0_0_set_17 = LBB0_17-LJTI0_0
LJTI0_0:
	.long	L0_0_set_6
	.long	L0_0_set_7
	.long	L0_0_set_8
	.long	L0_0_set_9
	.long	L0_0_set_10
	.long	L0_0_set_11
	.long	L0_0_set_12
	.long	L0_0_set_13
	.long	L0_0_set_14
	.long	L0_0_set_15
	.long	L0_0_set_16
	.long	L0_0_set_17

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"%d %d %d"

L_.str1:                                ## @.str1
	.asciz	"%d\n"


.subsections_via_symbols
